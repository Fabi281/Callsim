package de.callsim;

import javax.swing.*;
import javax.swing.border.TitledBorder;
import javax.swing.plaf.FontUIResource;
import javax.swing.text.StyleContext;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.Locale;
import java.util.HashMap;

public class NextWindow {
    JPanel rootPanel;
    JLabel name1;
    JLabel surname1;
    JButton call;
    JPanel listPanel;
    JButton callUserDirectlyBtn;
    JPanel userPanel;
    JPanel listUserTemplate;
    JPanel blueBg;
    JPanel dataContainer;
    JPanel firstNamePanel;
    JPanel surnamePanel;
    JPanel actionPanel;
    JPanel furtherInfoPanel;
    JPanel whiteBg;
    JLabel usernameLabelBig;
    JLabel usernamePrefix;
    JLabel firstNameLabelBig;
    JLabel surnameLabelBig;
    JPanel namePanel;
    JButton userBtn1;
    JButton userBtn2;
    JLabel numberOfUsers;
    int currentUserId = -1;
    String userNamePrefix = "@";

    HashMap<String, String> userData = new HashMap<>();


    // no idea (yet) how dynamic rendering can be realized

    public NextWindow() {
        userData.put("der-bernd", "Mayinger,Bernd");
        userData.put("theoneandonly", "Assfalg,Rolf");
        numberOfUsers.setText(userData.size() + " user" + (userData.size() != 1 ? "s" : "") + " registered");

        call.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                // code here will be executed after clicking on CALL

                /*JOptionPane.showMessageDialog(null, "lorem");*/

                String user = "der-bernd"; /* propably better way: giving userId as param */
                startACall(user);
            }
        });
        callUserDirectlyBtn.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                String user = "der-bernd"; /* propably better way: giving userId as param */
                startACall(user);
            }
        });
        namePanel.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                super.mouseClicked(e);
                String targetUser = "theoneandonly";
                updateBigDisplay(targetUser);
            }
        });
        userBtn1.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                String targetUser = "theoneandonly";
                updateBigDisplay(targetUser);
            }
        });
        userBtn2.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                String targetUser = "der-bernd";
                updateBigDisplay(targetUser);
            }
        });
    }

    public void updateBigDisplay(String newUsername) {
        String dataOfUser = userData.get(newUsername);
        if (dataOfUser == null) return;

        String firstNameOfUser = dataOfUser.split(",")[1];
        String surnameOfUser = dataOfUser.split(",")[0];

        firstNameLabelBig.setText(firstNameOfUser);
        surnameLabelBig.setText(surnameOfUser);
        usernameLabelBig.setText(usernamePrefix.getText() + newUsername);
    }

    public void startACall(String targetUser) {

    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        rootPanel = new JPanel();
        rootPanel.setLayout(new BorderLayout(0, 0));
        rootPanel.setBackground(new Color(-1));
        rootPanel.setMaximumSize(new Dimension(600, 1000));
        rootPanel.setMinimumSize(new Dimension(500, 300));
        rootPanel.setOpaque(true);
        rootPanel.setPreferredSize(new Dimension(650, 600));
        final JScrollPane scrollPane1 = new JScrollPane();
        scrollPane1.setBackground(new Color(-16446877));
        rootPanel.add(scrollPane1, BorderLayout.WEST);
        listPanel = new JPanel();
        listPanel.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(5, 1, new Insets(0, 10, 0, 5), -1, -1));
        listPanel.setAutoscrolls(false);
        listPanel.setBackground(new Color(-16775320));
        listPanel.setEnabled(true);
        scrollPane1.setViewportView(listPanel);
        listUserTemplate = new JPanel();
        listUserTemplate.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(2, 2, new Insets(0, 0, 0, 0), -1, -1));
        listUserTemplate.setBackground(new Color(-16775320));
        listPanel.add(listUserTemplate, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_NORTH, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        namePanel = new JPanel();
        namePanel.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 3, new Insets(0, 0, 0, 0), -1, -1));
        namePanel.setBackground(new Color(-16775320));
        listUserTemplate.add(namePanel, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        name1 = new JLabel();
        Font name1Font = this.$$$getFont$$$("Arial Nova Light", Font.PLAIN, 16, name1.getFont());
        if (name1Font != null) name1.setFont(name1Font);
        name1.setForeground(new Color(-1));
        name1.setText("Rolf");
        name1.setVisible(false);
        namePanel.add(name1, new com.intellij.uiDesigner.core.GridConstraints(0, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        surname1 = new JLabel();
        Font surname1Font = this.$$$getFont$$$("Arial Nova Light", Font.PLAIN, 16, surname1.getFont());
        if (surname1Font != null) surname1.setFont(surname1Font);
        surname1.setForeground(new Color(-1));
        surname1.setText("Assfalg");
        surname1.setVisible(false);
        namePanel.add(surname1, new com.intellij.uiDesigner.core.GridConstraints(0, 2, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        userBtn1 = new JButton();
        userBtn1.setBackground(new Color(-16775320));
        Font userBtn1Font = this.$$$getFont$$$("Arial Nova Light", -1, 16, userBtn1.getFont());
        if (userBtn1Font != null) userBtn1.setFont(userBtn1Font);
        userBtn1.setForeground(new Color(-1));
        userBtn1.setText("Rolf Assfalg");
        namePanel.add(userBtn1, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        callUserDirectlyBtn = new JButton();
        callUserDirectlyBtn.setActionCommand("");
        callUserDirectlyBtn.setBackground(new Color(-16775320));
        callUserDirectlyBtn.setBorderPainted(false);
        Font callUserDirectlyBtnFont = this.$$$getFont$$$("Arial Nova Cond Light", -1, 22, callUserDirectlyBtn.getFont());
        if (callUserDirectlyBtnFont != null) callUserDirectlyBtn.setFont(callUserDirectlyBtnFont);
        callUserDirectlyBtn.setForeground(new Color(-1));
        callUserDirectlyBtn.setHorizontalAlignment(4);
        callUserDirectlyBtn.setLabel("\uD83D\uDCDE");
        callUserDirectlyBtn.setText("\uD83D\uDCDE");
        listUserTemplate.add(callUserDirectlyBtn, new com.intellij.uiDesigner.core.GridConstraints(0, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_EAST, com.intellij.uiDesigner.core.GridConstraints.FILL_VERTICAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JLabel label1 = new JLabel();
        label1.setText("theoneandonly");
        label1.setVisible(false);
        listUserTemplate.add(label1, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JPanel panel1 = new JPanel();
        panel1.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(2, 2, new Insets(0, 0, 0, 0), -1, -1));
        panel1.setBackground(new Color(-16775320));
        listPanel.add(panel1, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_NORTH, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JPanel panel2 = new JPanel();
        panel2.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 3, new Insets(0, 0, 0, 0), -1, -1));
        panel2.setBackground(new Color(-16775320));
        panel1.add(panel2, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        final JLabel label2 = new JLabel();
        Font label2Font = this.$$$getFont$$$("Arial Nova Light", Font.PLAIN, 16, label2.getFont());
        if (label2Font != null) label2.setFont(label2Font);
        label2.setForeground(new Color(-1));
        label2.setText("Bernd");
        label2.setVisible(false);
        panel2.add(label2, new com.intellij.uiDesigner.core.GridConstraints(0, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JLabel label3 = new JLabel();
        Font label3Font = this.$$$getFont$$$("Arial Nova Light", Font.PLAIN, 16, label3.getFont());
        if (label3Font != null) label3.setFont(label3Font);
        label3.setForeground(new Color(-1));
        label3.setText("Mayinger");
        label3.setVisible(false);
        panel2.add(label3, new com.intellij.uiDesigner.core.GridConstraints(0, 2, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        userBtn2 = new JButton();
        userBtn2.setBackground(new Color(-16775320));
        Font userBtn2Font = this.$$$getFont$$$("Arial Nova Light", -1, 16, userBtn2.getFont());
        if (userBtn2Font != null) userBtn2.setFont(userBtn2Font);
        userBtn2.setForeground(new Color(-1));
        userBtn2.setText("Bernd Mayinger");
        panel2.add(userBtn2, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JButton button1 = new JButton();
        button1.setActionCommand("");
        button1.setBackground(new Color(-16775320));
        button1.setBorderPainted(false);
        Font button1Font = this.$$$getFont$$$("Arial Nova Cond Light", -1, 22, button1.getFont());
        if (button1Font != null) button1.setFont(button1Font);
        button1.setForeground(new Color(-1));
        button1.setHorizontalAlignment(4);
        button1.setLabel("\uD83D\uDCDE");
        button1.setText("\uD83D\uDCDE");
        panel1.add(button1, new com.intellij.uiDesigner.core.GridConstraints(0, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_EAST, com.intellij.uiDesigner.core.GridConstraints.FILL_VERTICAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JLabel label4 = new JLabel();
        label4.setText("der-bernd");
        label4.setVisible(false);
        panel1.add(label4, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final com.intellij.uiDesigner.core.Spacer spacer1 = new com.intellij.uiDesigner.core.Spacer();
        listPanel.add(spacer1, new com.intellij.uiDesigner.core.GridConstraints(2, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_VERTICAL, 1, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        numberOfUsers = new JLabel();
        numberOfUsers.setBackground(new Color(-16775320));
        Font numberOfUsersFont = this.$$$getFont$$$("Arial Nova Light", -1, 12, numberOfUsers.getFont());
        if (numberOfUsersFont != null) numberOfUsers.setFont(numberOfUsersFont);
        numberOfUsers.setForeground(new Color(-1));
        numberOfUsers.setText("12 users registered");
        listPanel.add(numberOfUsers, new com.intellij.uiDesigner.core.GridConstraints(4, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        userPanel = new JPanel();
        userPanel.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(50, 10, 40, 50), -1, -1));
        userPanel.setBackground(new Color(-1));
        userPanel.setForeground(new Color(-16775320));
        rootPanel.add(userPanel, BorderLayout.CENTER);
        blueBg = new JPanel();
        blueBg.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(2, 1, new Insets(15, 5, 0, 0), -1, -1));
        blueBg.setBackground(new Color(-1314561));
        userPanel.add(blueBg, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null, 1, false));
        whiteBg = new JPanel();
        whiteBg.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        whiteBg.setBackground(new Color(-1));
        blueBg.add(whiteBg, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        dataContainer = new JPanel();
        dataContainer.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(5, 1, new Insets(20, 50, 30, 0), -1, -1));
        dataContainer.setBackground(new Color(-1));
        whiteBg.add(dataContainer, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        firstNamePanel = new JPanel();
        firstNamePanel.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(2, 1, new Insets(0, 0, 0, 0), -1, -1));
        firstNamePanel.setBackground(new Color(-1));
        dataContainer.add(firstNamePanel, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        firstNameLabelBig = new JLabel();
        Font firstNameLabelBigFont = this.$$$getFont$$$("Arial Nova Light", -1, 36, firstNameLabelBig.getFont());
        if (firstNameLabelBigFont != null) firstNameLabelBig.setFont(firstNameLabelBigFont);
        firstNameLabelBig.setForeground(new Color(-13224394));
        firstNameLabelBig.setText("Rolf");
        firstNamePanel.add(firstNameLabelBig, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        final com.intellij.uiDesigner.core.Spacer spacer2 = new com.intellij.uiDesigner.core.Spacer();
        firstNamePanel.add(spacer2, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_VERTICAL, 1, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        surnamePanel = new JPanel();
        surnamePanel.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        surnamePanel.setBackground(new Color(-1));
        dataContainer.add(surnamePanel, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        surnameLabelBig = new JLabel();
        Font surnameLabelBigFont = this.$$$getFont$$$("Arial Nova Light", Font.BOLD, 36, surnameLabelBig.getFont());
        if (surnameLabelBigFont != null) surnameLabelBig.setFont(surnameLabelBigFont);
        surnameLabelBig.setText("Assfalg");
        surnamePanel.add(surnameLabelBig, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        actionPanel = new JPanel();
        actionPanel.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 30, 0, 30), -1, -1));
        actionPanel.setBackground(new Color(-1));
        dataContainer.add(actionPanel, new com.intellij.uiDesigner.core.GridConstraints(4, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_SOUTHWEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        call = new JButton();
        call.setBackground(new Color(-1));
        Font callFont = this.$$$getFont$$$("Arial Nova Light", -1, 26, call.getFont());
        if (callFont != null) call.setFont(callFont);
        call.setForeground(new Color(-16056233));
        call.setHorizontalTextPosition(0);
        call.setLabel("\uD83D\uDCDE");
        call.setText("\uD83D\uDCDE");
        actionPanel.add(call, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        furtherInfoPanel = new JPanel();
        furtherInfoPanel.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 2, new Insets(0, 0, 0, 0), -1, -1));
        furtherInfoPanel.setAutoscrolls(false);
        furtherInfoPanel.setBackground(new Color(-1));
        dataContainer.add(furtherInfoPanel, new com.intellij.uiDesigner.core.GridConstraints(2, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_VERTICAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        usernamePrefix = new JLabel();
        Font usernamePrefixFont = this.$$$getFont$$$("Arial Nova Light", Font.ITALIC, 16, usernamePrefix.getFont());
        if (usernamePrefixFont != null) usernamePrefix.setFont(usernamePrefixFont);
        usernamePrefix.setForeground(new Color(-12763843));
        usernamePrefix.setText("@");
        usernamePrefix.setVisible(false);
        furtherInfoPanel.add(usernamePrefix, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        usernameLabelBig = new JLabel();
        Font usernameLabelBigFont = this.$$$getFont$$$("Arial Nova Light", Font.ITALIC, 16, usernameLabelBig.getFont());
        if (usernameLabelBigFont != null) usernameLabelBig.setFont(usernameLabelBigFont);
        usernameLabelBig.setText("@theoneandonly");
        furtherInfoPanel.add(usernameLabelBig, new com.intellij.uiDesigner.core.GridConstraints(0, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final com.intellij.uiDesigner.core.Spacer spacer3 = new com.intellij.uiDesigner.core.Spacer();
        dataContainer.add(spacer3, new com.intellij.uiDesigner.core.GridConstraints(3, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_VERTICAL, 1, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        final JPanel panel3 = new JPanel();
        panel3.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        panel3.setBackground(new Color(-16775320));
        panel3.setVisible(false);
        rootPanel.add(panel3, BorderLayout.NORTH);
    }

    /**
     * @noinspection ALL
     */
    private Font $$$getFont$$$(String fontName, int style, int size, Font currentFont) {
        if (currentFont == null) return null;
        String resultName;
        if (fontName == null) {
            resultName = currentFont.getName();
        } else {
            Font testFont = new Font(fontName, Font.PLAIN, 10);
            if (testFont.canDisplay('a') && testFont.canDisplay('1')) {
                resultName = fontName;
            } else {
                resultName = currentFont.getName();
            }
        }
        Font font = new Font(resultName, style >= 0 ? style : currentFont.getStyle(), size >= 0 ? size : currentFont.getSize());
        boolean isMac = System.getProperty("os.name", "").toLowerCase(Locale.ENGLISH).startsWith("mac");
        Font fontWithFallback = isMac ? new Font(font.getFamily(), font.getStyle(), font.getSize()) : new StyleContext().getFont(font.getFamily(), font.getStyle(), font.getSize());
        return fontWithFallback instanceof FontUIResource ? fontWithFallback : new FontUIResource(fontWithFallback);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return rootPanel;
    }

    private void createUIComponents() {
        // TODO: place custom component creation code here
    }
}